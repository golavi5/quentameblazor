@page "/catalogo"
@inject ICatalogService CatalogService
@inject IInvAgrupService InvAgrupService
@inject IInvPricesService InvPricesService


<p>@Message</p>

@if (productCategories != null)
{
    <EditForm Model="@Product" OnValidSubmit="SearchProduct">
        <div class="card">
            <h6 class="card-header">Catalogo de Productos</h6>
            <div class="card-body">
                <div class="card-container">
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="col">
                                <MudSwitch @bind-Checked="@Sw_Agrup" Label="Buscar por Agrupacion" Color="Color.Info" />
                            </div>
                            <div class="col">
                                <label for="">Agrupacion</label>
                                <InputSelect class="form-control" @bind-Value="@Product.IdAgrup1">
                                    @foreach (var item in productCategories)
                                    {
                                        <option value="@item.CodigoAgrup1">@item.NomAgrup1</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="col">
                                <MudSwitch @bind-Checked="@Sw_Cod" Label="Buscar por Codigo de Barras" Color="Color.Info" />
                            </div>
                            <div class="col">
                                <label for="">Codigo de Barras</label>
                                <input type="text" class="form-control" value="@Product.CodigoBarras" id="CodBarras"/>
                            </div>    
                        </div>
                        <div class="col-sm-3">
                            <div class="col">
                                <MudSwitch @bind-Checked="@Sw_Name" Label="Buscar por Nombre" Color="Color.Info" />
                            </div>
                            <div class="col">
                                <label for="">Nombre</label>
                                <input type="text" class="form-control" value="@Product.NomInventario" id="NomInv"/>
                            </div>
                        </div>

                        <div class="col-sm-3">
                            <div class="col">

                            </div>
                            <div class="col align-self-end">
                                <input type="submit" class="btn btn-success" value="Buscar" />
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}


@if (invprecios != null && invprecios.Any())
{
    
    <div class="row">
        <div class="col">
            <MudTable Items="@invprecios" Hover="true" Breakpoint="Breakpoint.Sm">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">PRODUCTOS</MudText>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>NOMBRE</MudTh>
                    <MudTh>COD. DE BARRAS</MudTh>
                    <MudTh>PRECIO</MudTh>
                    <MudTh>LINEA</MudTh>
                    <MudTh>NOTAS</MudTh>
                    <MudTh></MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate Context="CatalogContext">
                    <MudTd DataLabel="Nombre">@CatalogContext.InventariosNomInventario</MudTd>
                    <MudTd DataLabel="Cod. de Barras">@CatalogContext.InventariosCodigoBarras</MudTd>
                    <MudTd DataLabel="Precio">@CatalogContext.Precio.ToString("C")</MudTd>
                    <MudTd DataLabel="Linea">@CatalogContext.InventariosInventariosAgrup1NomAgrup1</MudTd>
                    <MudTd DataLabel="Notas">@CatalogContext.InventariosObservacion</MudTd>
                    @* <MudTd DataLabel="">
                        <MudFab OnClick="@(() => Edit(CatalogContext.IdInventario))"
                                Color="Color.Primary"
                                Icon="@Icons.Material.Filled.Edit"
                                Size="Size.Small"
                                IconSize="Size.Small">
                        </MudFab>
                    </MudTd>
                    <MudTd DataLabel="">
                        <MudFab OnClick="@(() => Delete(ServContext.ServId))"
                                Color="Color.Secondary"
                                Icon="@Icons.Material.Filled.Delete"
                                Size="Size.Small"
                                IconSize="Size.Small">
                        </MudFab>
                    </MudTd> *@
                </RowTemplate>

            </MudTable>

        </div>
    </div>
    <div class="row">
        <div class="col">
            <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
        </div>
    </div>
}


@code {
    public string Message { get; set; }
    public bool Sw_Agrup { get; set; }
    public bool Sw_Cod { get; set; }
    public bool Sw_Name { get; set; }
    public Inventarios Product = new Inventarios();
    public IEnumerable<InvAgrupDto> productCategories { get; set; }
    public IEnumerable<ListaInvPreciosDto> invprecios { get; set; } 
    public MetaData MetaData { get; set; } = new MetaData();
    private ProductParameters _productParameters = new ProductParameters();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            productCategories = await InvAgrupService.GetInvAgrups();
        }
        catch (System.Exception ex)
        {
            Message = "Error... " + ex.Message;
        }
    }
    
    protected async Task SelectedPage(int page)
    {
        _productParameters.PageNumber = page;
        await GetInvPaged();
    }

    private async Task GetInvPaged()
    {
        try
        {
            var paginResponse = await InvPricesService.GetInvPaged(_productParameters);
            invprecios = paginResponse.Items;
            MetaData = paginResponse.MetaData;            
        }
        catch (Exception ex)
        {
            Message= "Error ... " + ex.Message;
        }
    }

    private async Task SearchChanged(string searchTerm)
    {
        _productParameters.PageNumber = 1;
        _productParameters.SearchTerm = searchTerm;
        await GetInvPaged();
    }

    private async Task SearchProduct()
    {
        _productParameters.SearchTerm = Product.NomInventario;
        await GetInvPaged();
    }

}