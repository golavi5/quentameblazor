@page "/catalogo"
@inject ICatalogService CatalogService

<p>@Message</p>

@if (invprecios != null && invprecios.Any())
{
    <div class="row">
        <div class="col">
            <MudTable Items="@invprecios" Hover="true" Breakpoint="Breakpoint.Sm">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">PRODUCTOS</MudText>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>NOMBRE</MudTh>
                    <MudTh>COD. DE BARRAS</MudTh>
                    <MudTh>PRECIO</MudTh>
                    <MudTh>LINEA</MudTh>
                    <MudTh>NOTAS</MudTh>
                    <MudTh></MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate Context="CatalogContext">
                    <MudTd DataLabel="Nombre">@CatalogContext.InventariosNomInventario</MudTd>
                    <MudTd DataLabel="Cod. de Barras">@CatalogContext.InventariosCodigoBarras</MudTd>
                    <MudTd DataLabel="Precio">@CatalogContext.Precio.ToString("C")</MudTd>
                    <MudTd DataLabel="Linea">@CatalogContext.InventariosInventariosAgrup1NomAgrup1</MudTd>
                    <MudTd DataLabel="Notas">@CatalogContext.InventariosObservacion</MudTd>
                    @* <MudTd DataLabel="">
                        <MudFab OnClick="@(() => Edit(CatalogContext.IdInventario))"
                                Color="Color.Primary"
                                Icon="@Icons.Material.Filled.Edit"
                                Size="Size.Small"
                                IconSize="Size.Small">
                        </MudFab>
                    </MudTd>
                    <MudTd DataLabel="">
                        <MudFab OnClick="@(() => Delete(ServContext.ServId))"
                                Color="Color.Secondary"
                                Icon="@Icons.Material.Filled.Delete"
                                Size="Size.Small"
                                IconSize="Size.Small">
                        </MudFab>
                    </MudTd> *@
                </RowTemplate>

            </MudTable>

        </div>
    </div>
    <div class="row">
        <div class="col">
            <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    public string Message { get; set; }
    public IEnumerable<ListaInvPreciosDto> invprecios { get; set; } = new List<ListaInvPreciosDto>();
    //public List<ListaInvPreciosDto> invpreciosList { get; set; } = new List<ListaInvPreciosDto>();
    public MetaData MetaData { get; set; } = new MetaData();
    private ProductParameters _productParameters = new ProductParameters();

    protected override async Task OnInitializedAsync()
    {
        await GetInvPaged();
        //await GetAll();
    }
    
    protected async Task SelectedPage(int page)
    {
        _productParameters.PageNumber = page;
        await GetInvPaged();
    }

    private async Task GetInvPaged()
    {
        try
        {
            var paginResponse = await CatalogService.GetInvPaged(_productParameters);
            invprecios = paginResponse.Items;
            MetaData = paginResponse.MetaData;            
        }
        catch (Exception ex)
        {
            Message= "Error ... " + ex.Message;
        }
    }

    private async Task GetAll()
    {
        invprecios = await CatalogService.GetInvWithPrices();
    }
}